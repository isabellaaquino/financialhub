{"ast":null,"code":"class AuthService {\n  async signIn(email, password) {\n    try {\n      // const response = await api.post(\"/token\", {\n      //   email: email,\n      //   password: password,\n      // });\n      // const data = await response.data;\n      console.log(JSON.stringify({\n        email,\n        password\n      }));\n      const response = await fetch(\"http://localhost:8000/api/token\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      let data = await response.json();\n      return data;\n    } catch (error) {\n      console.log(error);\n    }\n  }\n  async signUp(user) {\n    try {\n      console.log(\"sign out\");\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\nconst authService = new AuthService();\nexport default authService;","map":{"version":3,"names":["AuthService","signIn","email","password","console","log","JSON","stringify","response","fetch","method","headers","body","data","json","error","signUp","user","authService"],"sources":["D:/Workspace/financialhub/frontend/src/api/services/AuthService.ts"],"sourcesContent":["import { User } from \"../../models/User\";\r\nimport { api } from \"./Api\";\r\n\r\ninterface Response {\r\n  refresh: string;\r\n  access: string;\r\n}\r\nclass AuthService {\r\n  async signIn(email: string, password: string): Promise<Response | undefined> {\r\n    try {\r\n      // const response = await api.post(\"/token\", {\r\n      //   email: email,\r\n      //   password: password,\r\n      // });\r\n      // const data = await response.data;\r\n      console.log(JSON.stringify({ email, password }));\r\n      const response = await fetch(\"http://localhost:8000/api/token\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n      let data = await response.json();\r\n      return data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  async signUp(user: User) {\r\n    try {\r\n      console.log(\"sign out\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n}\r\n\r\nconst authService = new AuthService();\r\nexport default authService;\r\n"],"mappings":"AAOA,MAAMA,WAAW,CAAC;EAChB,MAAMC,MAAM,CAACC,KAAa,EAAEC,QAAgB,EAAiC;IAC3E,IAAI;MACF;MACA;MACA;MACA;MACA;MACAC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,SAAS,CAAC;QAAEL,KAAK;QAAEC;MAAS,CAAC,CAAC,CAAC;MAChD,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEN,IAAI,CAACC,SAAS,CAAC;UAAEL,KAAK;UAAEC;QAAS,CAAC;MAC1C,CAAC,CAAC;MACF,IAAIU,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,EAAE;MAChC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdX,OAAO,CAACC,GAAG,CAACU,KAAK,CAAC;IACpB;EACF;EAEA,MAAMC,MAAM,CAACC,IAAU,EAAE;IACvB,IAAI;MACFb,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;IACzB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdX,OAAO,CAACC,GAAG,CAACU,KAAK,CAAC;IACpB;EACF;AACF;AAEA,MAAMG,WAAW,GAAG,IAAIlB,WAAW,EAAE;AACrC,eAAekB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}